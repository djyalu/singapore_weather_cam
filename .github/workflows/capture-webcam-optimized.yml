name: Capture Webcam Images (Optimized)

on:
  schedule:
    # Ultra-optimized: Every 2 hours (12 runs/day = 360 runs/month)
    # Saves 83% of usage: 21,600 → 3,600 minutes/month
    - cron: '15 */2 * * *'  # Offset by 15 min from weather
  workflow_dispatch:
    inputs:
      capture_mode:
        type: choice
        options: [standard, priority, test]
        default: standard

env:
  NODE_ENV: production
  REQUEST_TIMEOUT: 12000
  MAX_RETRIES: 2
  DISABLE_BROWSER_CAPTURE: 'true'

jobs:
  capture-webcam:
    runs-on: ubuntu-latest
    timeout-minutes: 8  # Reduced from 15 to 8
    permissions:
      contents: write
    concurrency:
      group: webcam-capture
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1

      - name: Smart scheduling check
        id: check
        run: |
          # Skip during Singapore night hours (23:00-05:00 SGT) when traffic is minimal
          SGT_HOUR=$(TZ='Asia/Singapore' date +%H)
          if [[ $SGT_HOUR -ge 23 || $SGT_HOUR -lt 5 ]]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            echo "🌙 Skipping during low-traffic hours ($SGT_HOUR:00 SGT)"
            exit 0
          fi
          
          # Check if recent data exists (< 3 hours)
          if [[ -f "data/webcam/latest.json" ]]; then
            AGE=$(($(date +%s) - $(date -r data/webcam/latest.json +%s)))
            if [[ $AGE -lt 10800 && "${{ github.event.inputs.capture_mode }}" != "priority" ]]; then
              echo "skip=true" >> $GITHUB_OUTPUT
              echo "⏭️ Skipping: Recent data exists ($(($AGE/3600))h old)"
              exit 0
            fi
          fi
          
          echo "skip=false" >> $GITHUB_OUTPUT
          echo "✅ Webcam capture needed"

      - name: Setup Node.js and dependencies
        if: steps.check.outputs.skip == 'false'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies (optimized)
        if: steps.check.outputs.skip == 'false'
        run: |
          npm ci --prefer-offline --no-audit --no-fund --silent
          mkdir -p data/webcam public/{data/webcam,images/webcam}

      - name: Capture webcam images (streamlined)
        if: steps.check.outputs.skip == 'false'
        env:
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
          CAPTURE_MODE: ${{ github.event.inputs.capture_mode || 'standard' }}
          MAX_CONCURRENT_CAPTURES: '8'  # Increased for speed
        run: |
          timeout 6m node scripts/capture-webcam.js || {
            # Minimal fallback
            echo '{"timestamp":"'$(date -u '+%Y-%m-%dT%H:%M:%S.000Z')'","total_cameras":0,"captures":[],"status":"degraded"}' > data/webcam/latest.json
          }

      - name: Optimize and commit
        if: steps.check.outputs.skip == 'false'
        run: |
          if [[ -f "data/webcam/latest.json" ]]; then
            # Copy data
            cp data/webcam/latest.json public/data/webcam/
            
            # Efficient image cleanup (keep only last 24 hours)
            find public/images/webcam -name "*.jpg" -mtime +1 -delete 2>/dev/null || true
            
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action (Optimized)"
            git add data/webcam/ public/data/webcam/ public/images/webcam/
            
            if ! git diff --staged --quiet; then
              # Get capture stats efficiently
              STATS=$(node -pe "
                try {
                  const d = JSON.parse(require('fs').readFileSync('data/webcam/latest.json', 'utf8'));
                  \`\${d.successful_captures || 0}/\${d.total_cameras || 0}\`;
                } catch(e) { '0/0'; }
              ")
              
              git commit -m "chore(webcam): Update webcam images - $(date -u '+%Y-%m-%d %H:%M UTC')

Captures: ${STATS} • Mode: ${{ github.event.inputs.capture_mode || 'standard' }}

🤖 Optimized workflow - 83% usage reduction"
              git push
            fi
          fi

      - name: Cleanup
        if: always() && steps.check.outputs.skip == 'false'
        run: |
          rm -rf node_modules/.cache 2>/dev/null || true
          find public/images/webcam -name "*.tmp" -delete 2>/dev/null || true