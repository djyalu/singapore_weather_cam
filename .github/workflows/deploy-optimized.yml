name: Deploy to GitHub Pages (Optimized)

on:
  push:
    branches: [ main ]
    paths:
      # Only deploy when actual code changes (not just data updates)
      - 'src/**'
      - 'public/**'
      - 'index.html'
      - 'package*.json'
      - 'vite.config.js'
      - '.github/workflows/deploy*.yml'
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even without code changes'
        type: boolean
        default: false

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 6  # Reduced from default
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Shallow clone

      - name: Check if deployment needed
        id: check
        run: |
          # Skip if only data files changed (unless forced)
          if [[ "${{ github.event.inputs.force_deploy }}" == "true" ]]; then
            echo "deploy=true" >> $GITHUB_OUTPUT
            echo "✅ Force deployment requested"
            exit 0
          fi
          
          # Check if any non-data files changed in recent commits
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD 2>/dev/null || echo "")
          DATA_ONLY=true
          
          while IFS= read -r file; do
            if [[ ! "$file" =~ ^(data/|public/data/) ]]; then
              DATA_ONLY=false
              break
            fi
          done <<< "$CHANGED_FILES"
          
          if [[ "$DATA_ONLY" == "true" && -n "$CHANGED_FILES" ]]; then
            echo "deploy=false" >> $GITHUB_OUTPUT
            echo "⏭️ Skipping: Only data files changed"
            exit 0
          fi
          
          echo "deploy=true" >> $GITHUB_OUTPUT
          echo "✅ Code changes detected - deployment needed"

      - name: Setup Node.js
        if: steps.check.outputs.deploy == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies (optimized)
        if: steps.check.outputs.deploy == 'true'
        run: npm ci --prefer-offline --no-audit --no-fund --silent

      - name: Prepare data
        if: steps.check.outputs.deploy == 'true'
        run: |
          mkdir -p public/data/{weather,webcam}
          cp -r data/weather/* public/data/weather/ 2>/dev/null || true
          cp -r data/webcam/* public/data/webcam/ 2>/dev/null || true

      - name: Build (optimized)
        if: steps.check.outputs.deploy == 'true'
        run: |
          npm run build
          echo "📦 Build size: $(du -sh dist | cut -f1)"

      - name: Upload to GitHub Pages
        if: steps.check.outputs.deploy == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Deploy to GitHub Pages
        if: steps.check.outputs.deploy == 'true'
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Summary
        if: always()
        run: |
          if [[ "${{ steps.check.outputs.deploy }}" == "true" ]]; then
            echo "✅ Deployment completed successfully"
            echo "🌐 URL: ${{ steps.deployment.outputs.page_url || 'Pending...' }}"
          else
            echo "⏭️ Deployment skipped - no code changes detected"
            echo "💡 Use 'force_deploy: true' to override"
          fi