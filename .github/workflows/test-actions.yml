name: Test GitHub Actions with RPA

on:
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Test mode'
        required: false
        type: choice
        options:
          - quick
          - full
          - visual
        default: quick
  schedule:
    # Run daily at 6 AM UTC (2 PM Singapore time)
    - cron: '0 6 * * *'

permissions:
  contents: read
  actions: read

jobs:
  rpa-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci --prefer-offline --no-audit
          # Install Playwright browsers
          npx playwright install chromium
          
      - name: Create test directories
        run: |
          mkdir -p test-results/screenshots
          
      - name: Run RPA Tests
        env:
          NODE_ENV: test
          HEADLESS: true
          TEST_MODE: ${{ github.event.inputs.test_mode || 'quick' }}
        run: |
          echo "🤖 Starting GitHub Actions RPA Test..."
          echo "Test Mode: $TEST_MODE"
          echo "Repository: ${{ github.repository }}"
          echo ""
          
          # Run the RPA test
          timeout 10m node scripts/test-github-actions.js --test || {
            echo "⚠️ RPA test failed or timed out"
            echo "This might be due to GitHub rate limiting or UI changes"
            exit 0  # Don't fail the workflow for RPA issues
          }
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: rpa-test-results
          path: |
            test-results/
          retention-days: 7
          
      - name: Process test results
        if: always()
        run: |
          if [ -f "test-results/github-actions-test-report.json" ]; then
            echo "📊 Test Results Summary:"
            node -e "
              const report = JSON.parse(require('fs').readFileSync('test-results/github-actions-test-report.json', 'utf8'));
              console.log(\`✅ Passed: \${report.summary.passed}\`);
              console.log(\`❌ Failed: \${report.summary.failed}\`);
              console.log(\`📊 Total: \${report.summary.total}\`);
              console.log(\`⏱️ Duration: \${Math.round(report.summary.duration / 1000)}s\`);
              console.log('');
              console.log('📋 Test Details:');
              report.tests.forEach(test => {
                const status = test.status === 'passed' ? '✅' : '❌';
                console.log(\`  \${status} \${test.name}: \${test.details}\`);
              });
            "
          else
            echo "No test results file found"
          fi
          
      - name: Health check summary
        run: |
          echo "🏥 GitHub Actions Health Check Complete"
          echo "Repository: ${{ github.repository }}"
          echo "Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          echo "Test Mode: ${{ github.event.inputs.test_mode || 'quick' }}"
          echo ""
          echo "Next scheduled test: $(date -u -d '+1 day' '+%Y-%m-%d 06:00 UTC')"