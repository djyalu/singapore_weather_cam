{"version":3,"file":"TrafficCameraGallery-6483d990.js","sources":["../../src/services/trafficCameraService.js","../../src/components/webcam/LoadingSkeleton.jsx","../../src/components/webcam/ErrorState.jsx","../../src/components/webcam/TrafficCameraGallery.jsx"],"sourcesContent":["// Enhanced Singapore Traffic Camera Service with reliability improvements\nimport { apiService } from './apiService.js';\nimport { securityValidator } from './securityService.js';\n\nconst TRAFFIC_API_URL = 'https://api.data.gov.sg/v1/transport/traffic-images';\n\n// Popular camera locations mapping\nconst CAMERA_LOCATIONS = {\n  // Major Expressways\n  '1701': { name: 'Woodlands Causeway', area: 'Causeway' },\n  '1702': { name: 'Woodlands Checkpoint', area: 'Checkpoint' },\n  '1703': { name: 'BKE Woodlands Flyover', area: 'BKE' },\n  '1704': { name: 'BKE Dairy Farm Flyover', area: 'BKE' },\n  '1705': { name: 'BKE Sungei Kadut Flyover', area: 'BKE' },\n  '1706': { name: 'BKE Mandai Flyover', area: 'BKE' },\n  '1707': { name: 'KJE BC Exit', area: 'KJE' },\n  '1709': { name: 'Changi Airport', area: 'Changi' },\n  '2701': { name: 'Sentosa Gateway', area: 'Sentosa' },\n  '2702': { name: 'West Coast Highway', area: 'West Coast' },\n  '2703': { name: 'ECP Marina Bay', area: 'Marina Bay' },\n  '2704': { name: 'Orchard Boulevard', area: 'Orchard' },\n  '2705': { name: 'Marina Coastal Drive', area: 'Marina' },\n  '2706': { name: 'ECP Fort Road', area: 'ECP' },\n  '2707': { name: 'Fullerton Road', area: 'CBD' },\n  '2708': { name: 'Marina Boulevard', area: 'Marina' },\n  '3701': { name: 'Central Boulevard', area: 'CBD' },\n  '3702': { name: 'PIE Tuas', area: 'PIE' },\n  '3704': { name: 'PIE Kim Keat', area: 'PIE' },\n  '3705': { name: 'PIE Eunos', area: 'PIE' },\n  '4701': { name: 'AYE After Tuas', area: 'AYE' },\n  '4702': { name: 'AYE Keppel', area: 'AYE' },\n  '4703': { name: 'TPE Punggol', area: 'TPE' },\n  '4704': { name: 'TPE Seletar', area: 'TPE' },\n  '4705': { name: 'TPE Sengkang', area: 'TPE' },\n  '4706': { name: 'TPE Tampines', area: 'TPE' },\n  '4707': { name: 'CTE Braddell', area: 'CTE' },\n  '4708': { name: 'CTE Ang Mo Kio', area: 'CTE' },\n  '4709': { name: 'CTE Yishun', area: 'CTE' },\n  '4710': { name: 'Tuas Second Link', area: 'Tuas' },\n  '4712': { name: 'MCE Marina Bay', area: 'MCE' },\n  '4713': { name: 'MCE Maxwell', area: 'MCE' },\n  '4714': { name: 'MCE MBFC', area: 'MCE' },\n  '4716': { name: 'MCE Bayfront', area: 'MCE' },\n  '5794': { name: 'EMAS Woodlands', area: 'North' },\n  '5795': { name: 'EMAS Yishun', area: 'North' },\n  '5796': { name: 'EMAS Bishan', area: 'Central' },\n  '5797': { name: 'EMAS Bukit Panjang', area: 'West' },\n  '5798': { name: 'EMAS Jurong', area: 'West' },\n  '5799': { name: 'Tuas View Extension', area: 'Tuas' },\n  '6701': { name: 'BKE Chantek Flyover', area: 'BKE' },\n  '6702': { name: 'PIE Mount Pleasant', area: 'PIE' },\n  '6703': { name: 'PIE Woodsville', area: 'PIE' },\n  '6704': { name: 'PIE Bedok North', area: 'PIE' },\n  '6705': { name: 'PIE Eunos Flyover', area: 'PIE' },\n  '6706': { name: 'PIE Paya Lebar', area: 'PIE' },\n  '6708': { name: 'PIE Toa Payoh', area: 'PIE' },\n  '6710': { name: 'PIE Bukit Timah', area: 'PIE' },\n  '6711': { name: 'PIE Clementi', area: 'PIE' },\n  '6712': { name: 'PIE Jurong', area: 'PIE' },\n  '6713': { name: 'PIE Bukit Batok', area: 'PIE' },\n  '6714': { name: 'PIE BKE', area: 'PIE' },\n  '6715': { name: 'PIE Tuas Flyover', area: 'PIE' },\n  '6716': { name: 'PIE Nanyang Flyover', area: 'PIE' },\n  '7791': { name: 'Woodlands Avenue 12', area: 'Woodlands' },\n  '7793': { name: 'Loyang Avenue', area: 'East' },\n  '7794': { name: 'Upp Changi Road', area: 'East' },\n  '7795': { name: 'Changi Coast Road', area: 'East' },\n  '7796': { name: 'Tanah Merah Coast', area: 'East' },\n  '7797': { name: 'ECP Changi Link', area: 'ECP' },\n  '7798': { name: 'Marine Parade Road', area: 'East Coast' },\n  '8701': { name: 'AYE MCE', area: 'AYE' },\n  '8702': { name: 'SLE Lentor', area: 'SLE' },\n  '8704': { name: 'SLE Marsiling', area: 'SLE' },\n  '8706': { name: 'SLE Woodlands South', area: 'SLE' },\n  '9701': { name: 'Admiralty Road', area: 'North' },\n  '9702': { name: 'Upp Thomson Road', area: 'Central' },\n  '9703': { name: 'SLE Mandai Lake', area: 'SLE' },\n  '9704': { name: 'SLE Seletar', area: 'SLE' },\n  '9705': { name: 'TPE Pasir Ris', area: 'TPE' },\n  '9706': { name: 'Loyang Avenue Flyover', area: 'East' },\n};\n\nexport const fetchTrafficCameras = async (options = {}) => {\n  try {\n    // Use enhanced API service with circuit breaker and caching\n    const data = await apiService.fetch(TRAFFIC_API_URL, {\n      cacheTTL: options.cacheTTL || 60000, // 1 minute cache\n      timeout: options.timeout || 15000, // 15 second timeout\n      headers: {\n        'Accept': 'application/json',\n        'User-Agent': 'Singapore-Weather-Cam/1.0',\n      },\n    });\n\n    // Validate data structure\n    if (!data || typeof data !== 'object') {\n      throw new Error('Invalid API response format');\n    }\n\n    if (!data.items || !Array.isArray(data.items) || data.items.length === 0) {\n      throw new Error('No traffic camera data available');\n    }\n\n    // Get the most recent data\n    const latestItem = data.items[0];\n\n    if (!latestItem.cameras || !Array.isArray(latestItem.cameras)) {\n      throw new Error('Invalid camera data structure');\n    }\n\n    const { timestamp, cameras } = latestItem;\n\n    // Process cameras with enhanced validation and error handling\n    const processedCameras = cameras\n      .filter(camera => {\n        // Filter out invalid cameras\n        return camera.camera_id &&\n               camera.location &&\n               camera.image &&\n               typeof camera.location.latitude === 'number' &&\n               typeof camera.location.longitude === 'number';\n      })\n      .map(camera => {\n        const locationInfo = CAMERA_LOCATIONS[camera.camera_id] || {\n          name: `Camera ${camera.camera_id}`,\n          area: 'Unknown',\n        };\n\n        // Create initial camera data\n        const cameraData = {\n          id: camera.camera_id,\n          name: locationInfo.name,\n          area: locationInfo.area,\n          location: {\n            latitude: parseFloat(camera.location.latitude),\n            longitude: parseFloat(camera.location.longitude),\n          },\n          image: {\n            url: camera.image,\n            width: camera.image_metadata?.width || 0,\n            height: camera.image_metadata?.height || 0,\n            md5: camera.image_metadata?.md5 || null,\n          },\n          timestamp: camera.timestamp,\n          quality: getImageQuality(camera.image_metadata),\n          status: 'active',\n        };\n\n        // Security validation and sanitization\n        const validation = securityValidator.validateCameraData(cameraData);\n        if (!validation.isValid) {\n          console.warn(`Camera ${camera.camera_id} validation failed:`, validation.errors);\n          return null; // Exclude invalid cameras\n        }\n\n        return validation.sanitized;\n      })\n      .filter(camera => camera !== null); // Remove invalid cameras\n\n    // Log performance metrics\n    console.log(`📊 Traffic Cameras: ${processedCameras.length} cameras processed`);\n\n    return {\n      timestamp,\n      totalCameras: processedCameras.length,\n      cameras: processedCameras,\n      metadata: {\n        fetchTime: new Date().toISOString(),\n        source: 'data.gov.sg',\n        cacheHit: false, // Will be updated by API service\n        processingTime: Date.now() - (options.startTime || Date.now()),\n      },\n    };\n  } catch (error) {\n    console.error('Error fetching traffic cameras:', error);\n\n    // Enhanced error with context\n    const enhancedError = new Error(`Traffic camera fetch failed: ${error.message}`);\n    enhancedError.originalError = error;\n    enhancedError.service = 'traffic-cameras';\n    enhancedError.timestamp = new Date().toISOString();\n\n    throw enhancedError;\n  }\n};\n\n/**\n * Determine image quality based on metadata\n */\nfunction getImageQuality(metadata) {\n  if (!metadata) {return 'unknown';}\n\n  const { width, height } = metadata;\n  if (width >= 1920 && height >= 1080) {return 'HD';}\n  if (width >= 1280 && height >= 720) {return 'HD Ready';}\n  if (width >= 640 && height >= 480) {return 'Standard';}\n  return 'Low';\n}\n\n// Filter cameras by area or expressway\nexport const filterCamerasByArea = (cameras, area) => {\n  if (!area || area === 'all') {return cameras;}\n  return cameras.filter(camera =>\n    camera.area.toLowerCase().includes(area.toLowerCase()),\n  );\n};\n\n// Get camera by ID\nexport const getCameraById = (cameras, cameraId) => {\n  return cameras.find(camera => camera.id === cameraId);\n};\n\n// Group cameras by area\nexport const groupCamerasByArea = (cameras) => {\n  return cameras.reduce((grouped, camera) => {\n    if (!grouped[camera.area]) {\n      grouped[camera.area] = [];\n    }\n    grouped[camera.area].push(camera);\n    return grouped;\n  }, {});\n};\n\n// Get popular/featured cameras\nexport const getFeaturedCameras = (cameras) => {\n  const featuredIds = ['2703', '2704', '1701', '4712', '2701', '1709', '4710', '6716'];\n  return cameras.filter(camera => featuredIds.includes(camera.id));\n};","import React from 'react';\n\n/**\n * LoadingSkeleton Component\n *\n * Provides modern skeleton UI patterns for the TrafficCameraGallery component\n * Features:\n * - Camera card skeletons matching actual layout\n * - Progressive loading animations with staggered timing\n * - Shimmer effects using CSS animations\n * - Mobile responsive design\n * - Accessibility compliant\n */\n\nconst CameraCardSkeleton = React.memo(({ delay = 0 }) => (\n  <div\n    className=\"card animate-pulse\"\n    style={{\n      animationDelay: `${delay}ms`,\n      animationDuration: '1.5s',\n    }}\n    role=\"status\"\n    aria-label=\"Loading camera\"\n  >\n    {/* Image placeholder with shimmer effect */}\n    <div className=\"aspect-video bg-gray-200 rounded overflow-hidden mb-3 relative\">\n      <div className=\"skeleton w-full h-full\"></div>\n      {/* Optional loading indicator overlay */}\n      <div className=\"absolute inset-0 flex items-center justify-center\">\n        <div className=\"flex space-x-1\">\n          <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0ms' }}></div>\n          <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '150ms' }}></div>\n          <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '300ms' }}></div>\n        </div>\n      </div>\n    </div>\n\n    {/* Camera name skeleton */}\n    <div className=\"skeleton h-4 w-3/4 mb-2 rounded\"></div>\n\n    {/* Area name skeleton */}\n    <div className=\"skeleton h-3 w-1/2 mb-3 rounded\"></div>\n\n    {/* Bottom metadata row */}\n    <div className=\"flex items-center justify-between\">\n      <div className=\"skeleton h-3 w-16 rounded\"></div>\n      <div className=\"skeleton h-3 w-20 rounded\"></div>\n    </div>\n\n    {/* Screen reader content */}\n    <span className=\"sr-only\">Loading camera information</span>\n  </div>\n));\n\nconst ControlsSkeleton = React.memo(() => (\n  <div className=\"card animate-pulse\" role=\"status\" aria-label=\"Loading controls\">\n    <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n      {/* Control buttons skeleton */}\n      <div className=\"flex items-center gap-4\">\n        <div className=\"skeleton h-8 w-20 rounded\"></div>\n        <div className=\"skeleton h-8 w-16 rounded\"></div>\n        <div className=\"skeleton h-8 w-14 rounded\"></div>\n      </div>\n\n      {/* Right side controls skeleton */}\n      <div className=\"flex items-center gap-4\">\n        <div className=\"skeleton h-6 w-24 rounded\"></div>\n        <div className=\"skeleton h-8 w-20 rounded\"></div>\n      </div>\n    </div>\n\n    {/* Last update skeleton */}\n    <div className=\"mt-3\">\n      <div className=\"skeleton h-3 w-48 rounded\"></div>\n    </div>\n\n    <span className=\"sr-only\">Loading gallery controls</span>\n  </div>\n));\n\nconst SummarySkeleton = React.memo(() => (\n  <div className=\"card animate-pulse\" role=\"status\" aria-label=\"Loading summary\">\n    <div className=\"flex items-center justify-between\">\n      <div className=\"skeleton h-4 w-40 rounded\"></div>\n      <div className=\"skeleton h-4 w-32 rounded\"></div>\n    </div>\n    <span className=\"sr-only\">Loading camera summary</span>\n  </div>\n));\n\n/**\n * Main LoadingSkeleton Component\n *\n * @param {Object} props\n * @param {number} props.count - Number of camera cards to show (default: 8)\n * @param {boolean} props.showControls - Whether to show controls skeleton (default: true)\n * @param {boolean} props.showSummary - Whether to show summary skeleton (default: true)\n * @param {string} props.variant - Skeleton variant ('default' | 'compact' | 'minimal')\n */\nconst LoadingSkeleton = ({\n  count = 8,\n  showControls = true,\n  showSummary = true,\n  variant = 'default',\n}) => {\n  // Calculate responsive grid based on viewport\n  const getGridCols = () => {\n    if (variant === 'compact') {return 'grid-cols-1 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6';}\n    if (variant === 'minimal') {return 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3';}\n    return 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4';\n  };\n\n  // Stagger animation delays for natural loading feel\n  const getStaggerDelay = (index) => {\n    const baseDelay = Math.floor(index / 4) * 100; // Group delays\n    const itemDelay = (index % 4) * 50; // Individual delays within group\n    return baseDelay + itemDelay;\n  };\n\n  return (\n    <div className=\"space-y-6\" role=\"region\" aria-label=\"Loading camera gallery\">\n      {/* Controls skeleton */}\n      {showControls && <ControlsSkeleton />}\n\n      {/* Camera grid skeleton */}\n      <div className={`grid ${getGridCols()} gap-4`}>\n        {Array.from({ length: count }, (_, index) => (\n          <CameraCardSkeleton\n            key={`skeleton-${index}`}\n            delay={getStaggerDelay(index)}\n          />\n        ))}\n      </div>\n\n      {/* Summary skeleton */}\n      {showSummary && <SummarySkeleton />}\n\n      {/* Loading announcement for screen readers */}\n      <div\n        className=\"sr-only\"\n        role=\"status\"\n        aria-live=\"polite\"\n        aria-atomic=\"true\"\n      >\n        Loading camera gallery with {count} items. Please wait...\n      </div>\n    </div>\n  );\n};\n\n// Individual component exports for granular usage\nLoadingSkeleton.CameraCard = CameraCardSkeleton;\nLoadingSkeleton.Controls = ControlsSkeleton;\nLoadingSkeleton.Summary = SummarySkeleton;\n\n// Display names for better debugging\nCameraCardSkeleton.displayName = 'CameraCardSkeleton';\nControlsSkeleton.displayName = 'ControlsSkeleton';\nSummarySkeleton.displayName = 'SummarySkeleton';\nLoadingSkeleton.displayName = 'LoadingSkeleton';\n\nexport default LoadingSkeleton;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * ErrorState Component\n *\n * Enhanced error handling component with better messaging and retry mechanisms\n * Features:\n * - Multiple error types with appropriate messaging\n * - Retry functionality with exponential backoff\n * - Accessibility compliant\n * - Mobile responsive design\n * - Progressive enhancement options\n */\n\nconst ErrorState = ({\n  error,\n  onRetry,\n  retryAttempts = 0,\n  maxRetries = 3,\n  showDetails = false,\n  variant = 'default', // 'default' | 'compact' | 'inline'\n}) => {\n  const [isRetrying, setIsRetrying] = useState(false);\n  const [showErrorDetails, setShowErrorDetails] = useState(showDetails);\n\n  // Determine error type and appropriate messaging\n  const getErrorInfo = (errorMessage) => {\n    const error = errorMessage?.toLowerCase() || '';\n\n    if (error.includes('network') || error.includes('fetch')) {\n      return {\n        type: 'network',\n        title: '네트워크 연결 오류',\n        message: '인터넷 연결을 확인하고 다시 시도해주세요.',\n        icon: '🌐',\n        severity: 'error',\n      };\n    }\n\n    if (error.includes('timeout')) {\n      return {\n        type: 'timeout',\n        title: '요청 시간 초과',\n        message: '서버 응답이 지연되고 있습니다. 잠시 후 다시 시도해주세요.',\n        icon: '⏱️',\n        severity: 'warning',\n      };\n    }\n\n    if (error.includes('404') || error.includes('not found')) {\n      return {\n        type: 'not_found',\n        title: '데이터를 찾을 수 없음',\n        message: '요청한 카메라 데이터를 찾을 수 없습니다.',\n        icon: '🔍',\n        severity: 'warning',\n      };\n    }\n\n    if (error.includes('403') || error.includes('unauthorized')) {\n      return {\n        type: 'unauthorized',\n        title: '접근 권한 없음',\n        message: '데이터에 접근할 권한이 없습니다.',\n        icon: '🔒',\n        severity: 'error',\n      };\n    }\n\n    if (error.includes('500') || error.includes('server')) {\n      return {\n        type: 'server',\n        title: '서버 오류',\n        message: '서버에 일시적인 문제가 발생했습니다.',\n        icon: '🔧',\n        severity: 'error',\n      };\n    }\n\n    // Generic error\n    return {\n      type: 'generic',\n      title: '오류가 발생했습니다',\n      message: '예상치 못한 오류가 발생했습니다. 다시 시도해주세요.',\n      icon: '⚠️',\n      severity: 'error',\n    };\n  };\n\n  const errorInfo = getErrorInfo(error);\n  const canRetry = retryAttempts < maxRetries && onRetry;\n\n  // Calculate retry delay with exponential backoff\n  const getRetryDelay = (attempt) => {\n    return Math.min(1000 * Math.pow(2, attempt), 10000); // Max 10 seconds\n  };\n\n  const handleRetry = async () => {\n    if (!canRetry || isRetrying) {return;}\n\n    setIsRetrying(true);\n\n    try {\n      const delay = getRetryDelay(retryAttempts);\n\n      // Show retry countdown for longer delays\n      if (delay > 2000) {\n        const seconds = Math.ceil(delay / 1000);\n        // You could implement a countdown here if needed\n      }\n\n      await new Promise(resolve => setTimeout(resolve, delay));\n      await onRetry();\n    } catch (retryError) {\n      // Error handling is done by parent component\n      console.error('Retry failed:', retryError);\n    } finally {\n      setIsRetrying(false);\n    }\n  };\n\n  const getContainerClasses = () => {\n    const base = 'text-center';\n\n    switch (variant) {\n      case 'compact':\n        return `${base} py-4`;\n      case 'inline':\n        return `${base} py-2`;\n      default:\n        return `${base} py-8`;\n    }\n  };\n\n  const getIconSize = () => {\n    switch (variant) {\n      case 'compact':\n      case 'inline':\n        return 'text-3xl';\n      default:\n        return 'text-5xl';\n    }\n  };\n\n  if (variant === 'inline') {\n    return (\n      <div className=\"flex items-center justify-center gap-3 p-4 bg-red-50 border border-red-200 rounded-lg\">\n        <span className=\"text-xl\">{errorInfo.icon}</span>\n        <div className=\"text-left\">\n          <p className=\"text-sm font-medium text-red-800\">{errorInfo.title}</p>\n          <p className=\"text-xs text-red-600\">{errorInfo.message}</p>\n        </div>\n        {canRetry && (\n          <button\n            onClick={handleRetry}\n            disabled={isRetrying}\n            className=\"btn-secondary text-xs px-3 py-1\"\n            aria-label={`재시도 (${retryAttempts + 1}/${maxRetries})`}\n          >\n            {isRetrying ? '재시도 중...' : '재시도'}\n          </button>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"card\">\n      <div className={getContainerClasses()} role=\"alert\" aria-live=\"assertive\">\n        {/* Error icon */}\n        <div className={`${getIconSize()} mb-4`} aria-hidden=\"true\">\n          {errorInfo.icon}\n        </div>\n\n        {/* Error title */}\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n          {errorInfo.title}\n        </h3>\n\n        {/* Error message */}\n        <p className=\"text-gray-600 mb-4 max-w-md mx-auto\">\n          {errorInfo.message}\n        </p>\n\n        {/* Error details toggle */}\n        {error && (\n          <button\n            onClick={() => setShowErrorDetails(!showErrorDetails)}\n            className=\"text-sm text-gray-500 hover:text-gray-700 mb-4 underline\"\n            aria-expanded={showErrorDetails}\n            aria-controls=\"error-details\"\n          >\n            {showErrorDetails ? '자세한 내용 숨기기' : '자세한 내용 보기'}\n          </button>\n        )}\n\n        {/* Error details */}\n        {showErrorDetails && error && (\n          <div\n            id=\"error-details\"\n            className=\"bg-gray-50 border border-gray-200 rounded p-3 mb-4 text-left\"\n          >\n            <h4 className=\"text-sm font-medium text-gray-700 mb-1\">오류 세부사항:</h4>\n            <pre className=\"text-xs text-gray-600 whitespace-pre-wrap break-words\">\n              {error}\n            </pre>\n          </div>\n        )}\n\n        {/* Action buttons */}\n        <div className=\"flex flex-col sm:flex-row gap-3 justify-center items-center\">\n          {canRetry && (\n            <button\n              onClick={handleRetry}\n              disabled={isRetrying}\n              className={`btn-primary ${isRetrying ? 'opacity-75 cursor-not-allowed' : ''}`}\n              aria-label={`재시도 (${retryAttempts + 1}/${maxRetries})`}\n            >\n              {isRetrying ? (\n                <span className=\"flex items-center gap-2\">\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                  재시도 중...\n                </span>\n              ) : (\n                `🔄 다시 시도 (${retryAttempts + 1}/${maxRetries})`\n              )}\n            </button>\n          )}\n\n          {/* Help or contact button */}\n          <button\n            onClick={() => window.location.reload()}\n            className=\"btn-secondary\"\n          >\n            🔃 페이지 새로고침\n          </button>\n        </div>\n\n        {/* Retry attempts indicator */}\n        {retryAttempts > 0 && (\n          <div className=\"mt-4 text-sm text-gray-500\">\n            재시도 횟수: {retryAttempts}/{maxRetries}\n          </div>\n        )}\n\n        {/* Additional help text */}\n        <div className=\"mt-6 text-xs text-gray-500 max-w-lg mx-auto\">\n          <p>\n            문제가 지속되면 브라우저를 새로고침하거나\n            잠시 후 다시 방문해주세요.\n          </p>\n        </div>\n\n        {/* Screen reader additional context */}\n        <div className=\"sr-only\">\n          오류 유형: {errorInfo.type}.\n          심각도: {errorInfo.severity}.\n          {canRetry ? `재시도 가능. 남은 재시도 횟수: ${maxRetries - retryAttempts}회.` : '재시도 불가능.'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nErrorState.propTypes = {\n  error: PropTypes.string,\n  onRetry: PropTypes.func,\n  retryAttempts: PropTypes.number,\n  maxRetries: PropTypes.number,\n  showDetails: PropTypes.bool,\n  variant: PropTypes.oneOf(['default', 'compact', 'inline']),\n};\n\nErrorState.displayName = 'ErrorState';\n\nexport default ErrorState;","import { useState, useEffect, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  fetchTrafficCameras,\n  filterCamerasByArea,\n  groupCamerasByArea,\n  getFeaturedCameras,\n} from '../../services/trafficCameraService';\nimport LoadingSkeleton from './LoadingSkeleton';\nimport ErrorState from './ErrorState';\nimport WebcamModal from './WebcamModal';\n\n/**\n * Individual Camera Card Component with enhanced mobile touch interactions\n */\nconst CameraCard = ({ camera, index, onImageTap, onCardPress }) => {\n  const [imageLoading, setImageLoading] = useState(true);\n  const [imageError, setImageError] = useState(false);\n  const [isPressed, setIsPressed] = useState(false);\n  const touchStartRef = useRef(null);\n  const pressTimeoutRef = useRef(null);\n\n  const handleImageLoad = (e) => {\n    setImageLoading(false);\n    e.target.style.opacity = '1';\n  };\n\n  const handleImageError = (e) => {\n    setImageLoading(false);\n    setImageError(true);\n    e.target.src = '/images/placeholder.jpg';\n    e.target.style.opacity = '0.7';\n  };\n\n  // Enhanced touch interactions for mobile\n  const handleTouchStart = useCallback((e) => {\n    touchStartRef.current = {\n      x: e.touches[0].clientX,\n      y: e.touches[0].clientY,\n      time: Date.now(),\n    };\n\n    // Add visual feedback for touch\n    setIsPressed(true);\n\n    // Long press detection for camera details\n    pressTimeoutRef.current = setTimeout(() => {\n      if (onCardPress) {\n        onCardPress(camera);\n        // Haptic feedback on supported devices\n        if (navigator.vibrate) {\n          navigator.vibrate(50);\n        }\n      }\n    }, 500);\n  }, [camera, onCardPress]);\n\n  const handleTouchEnd = useCallback((e) => {\n    setIsPressed(false);\n\n    if (pressTimeoutRef.current) {\n      clearTimeout(pressTimeoutRef.current);\n    }\n\n    if (!touchStartRef.current) {return;}\n\n    const touchEnd = {\n      x: e.changedTouches[0].clientX,\n      y: e.changedTouches[0].clientY,\n      time: Date.now(),\n    };\n\n    const deltaX = touchEnd.x - touchStartRef.current.x;\n    const deltaY = touchEnd.y - touchStartRef.current.y;\n    const deltaTime = touchEnd.time - touchStartRef.current.time;\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n    // Quick tap detection (< 300ms, < 10px movement)\n    if (deltaTime < 300 && distance < 10 && onImageTap) {\n      onImageTap(camera);\n    }\n\n    touchStartRef.current = null;\n  }, [camera, onImageTap]);\n\n  const handleTouchCancel = useCallback(() => {\n    setIsPressed(false);\n    if (pressTimeoutRef.current) {\n      clearTimeout(pressTimeoutRef.current);\n    }\n    touchStartRef.current = null;\n  }, []);\n\n  // Prevent context menu on long press\n  const handleContextMenu = useCallback((e) => {\n    e.preventDefault();\n  }, []);\n\n  return (\n    <div\n      className={`\n        card transition-all duration-300 card-interactive touch-manipulation\n        ${isPressed ? 'scale-95 shadow-md' : 'hover:shadow-lg active:scale-98'}\n        cursor-pointer select-none\n      `}\n      style={{\n        animationDelay: `${(index % 8) * 50}ms`,\n        WebkitTapHighlightColor: 'transparent',\n      }}\n      onTouchStart={handleTouchStart}\n      onTouchEnd={handleTouchEnd}\n      onTouchCancel={handleTouchCancel}\n      onContextMenu={handleContextMenu}\n      role=\"button\"\n      tabIndex={0}\n      aria-label={`${camera.name} 카메라 보기`}\n    >\n      <div className=\"aspect-video bg-gray-100 rounded-lg overflow-hidden mb-3 relative group\">\n        {/* Image loading skeleton overlay */}\n        {imageLoading && (\n          <div className=\"absolute inset-0 skeleton flex items-center justify-center z-10\">\n            <div className=\"flex space-x-1\">\n              <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0ms' }}></div>\n              <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '150ms' }}></div>\n              <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '300ms' }}></div>\n            </div>\n          </div>\n        )}\n\n        {/* Actual camera image */}\n        <img\n          src={`${camera.image.url}?t=${Date.now()}`}\n          alt={`${camera.name} 실시간 카메라`}\n          className=\"w-full h-full object-cover transition-all duration-500 group-hover:scale-105 group-active:scale-95\"\n          loading=\"lazy\"\n          onLoad={handleImageLoad}\n          onError={handleImageError}\n          style={{\n            opacity: imageLoading ? '0' : '1',\n            touchAction: 'manipulation',\n          }}\n          draggable={false}\n        />\n\n        {/* Image error overlay */}\n        {imageError && (\n          <div className=\"absolute inset-0 bg-gray-100 flex flex-col items-center justify-center text-gray-500\">\n            <div className=\"text-xl sm:text-2xl mb-2\">📷</div>\n            <div className=\"text-xs text-center px-2\">이미지를 불러올 수<br />없습니다</div>\n          </div>\n        )}\n\n        {/* Live indicator - Enhanced for mobile */}\n        <div className=\"absolute top-2 right-2 bg-red-500 text-white text-xs px-2 py-1 rounded-full flex items-center gap-1 shadow-sm\">\n          <div className=\"w-2 h-2 bg-white rounded-full animate-pulse\"></div>\n          <span className=\"hidden xs:inline\">LIVE</span>\n          <span className=\"xs:hidden\">●</span>\n        </div>\n\n        {/* Touch interaction hint overlay */}\n        <div className=\"absolute inset-0 bg-black bg-opacity-0 group-active:bg-opacity-10 transition-all duration-200 pointer-events-none\" />\n      </div>\n\n      {/* Camera info - Enhanced mobile typography */}\n      <div className=\"space-y-2\">\n        <h4 className=\"font-medium text-sm sm:text-base mb-1 line-clamp-1 leading-tight\" title={camera.name}>\n          {camera.name}\n        </h4>\n        <p className=\"text-xs sm:text-sm text-gray-600 mb-2 line-clamp-1 leading-relaxed\" title={camera.area}>\n          📍 {camera.area}\n        </p>\n\n        {/* Metadata - Mobile optimized */}\n        <div className=\"flex items-center justify-between text-xs text-gray-500 gap-2\">\n          <span className=\"bg-gray-100 px-2 py-1 rounded text-xs flex-shrink-0\">\n            ID: {camera.id}\n          </span>\n          <span className=\"bg-blue-50 text-blue-600 px-2 py-1 rounded text-xs flex-shrink-0\">\n            {camera.image.width}×{camera.image.height}\n          </span>\n        </div>\n      </div>\n\n      {/* Mobile interaction indicators */}\n      <div className=\"absolute bottom-2 left-2 opacity-0 group-active:opacity-100 transition-opacity duration-200\">\n        <div className=\"text-xs text-gray-400 bg-white bg-opacity-80 px-2 py-1 rounded\">\n          탭하여 모달 열기\n        </div>\n      </div>\n\n      {/* Accessibility */}\n      <div className=\"sr-only\">\n        실시간 교통 카메라: {camera.name}, 위치: {camera.area},\n        해상도: {camera.image.width}×{camera.image.height}픽셀.\n        탭하여 확대 모달 열기, 화살표 키로 탐색 가능\n      </div>\n    </div>\n  );\n};\n\nCameraCard.propTypes = {\n  camera: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    name: PropTypes.string.isRequired,\n    area: PropTypes.string.isRequired,\n    image: PropTypes.shape({\n      url: PropTypes.string.isRequired,\n      width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    }).isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  onImageTap: PropTypes.func,\n  onCardPress: PropTypes.func,\n};\n\nconst TrafficCameraGallery = () => {\n  const [cameras, setCameras] = useState([]);\n  const [filteredCameras, setFilteredCameras] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedArea, setSelectedArea] = useState('all');\n  const [viewMode, setViewMode] = useState('featured'); // 'featured', 'all', 'area'\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const [autoRefresh, setAutoRefresh] = useState(true);\n  const [retryAttempts, setRetryAttempts] = useState(0);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [selectedCamera, setSelectedCamera] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [touchDevice, setTouchDevice] = useState(false);\n\n  // Detect touch device on mount\n  useEffect(() => {\n    const checkTouchDevice = () => {\n      setTouchDevice(\n        'ontouchstart' in window ||\n        navigator.maxTouchPoints > 0 ||\n        navigator.msMaxTouchPoints > 0,\n      );\n    };\n\n    checkTouchDevice();\n    window.addEventListener('touchstart', checkTouchDevice, { once: true });\n\n    return () => {\n      window.removeEventListener('touchstart', checkTouchDevice);\n    };\n  }, []);\n\n  // Fetch cameras on mount and set up auto-refresh\n  useEffect(() => {\n    fetchCameras();\n\n    if (autoRefresh) {\n      const interval = setInterval(fetchCameras, 60000); // Update every minute\n      return () => clearInterval(interval);\n    }\n  }, [autoRefresh]);\n\n  // Filter cameras when selection changes\n  useEffect(() => {\n    if (viewMode === 'featured') {\n      setFilteredCameras(getFeaturedCameras(cameras));\n    } else if (viewMode === 'area' && selectedArea !== 'all') {\n      setFilteredCameras(filterCamerasByArea(cameras, selectedArea));\n    } else {\n      setFilteredCameras(cameras);\n    }\n  }, [cameras, viewMode, selectedArea]);\n\n  const fetchCameras = async (isManualRefresh = false) => {\n    try {\n      if (isManualRefresh) {\n        setIsRefreshing(true);\n      } else {\n        setLoading(true);\n      }\n\n      const data = await fetchTrafficCameras();\n      setCameras(data.cameras);\n      setLastUpdate(new Date(data.timestamp));\n      setError(null);\n      setRetryAttempts(0); // Reset retry attempts on success\n    } catch (err) {\n      setError(err.message);\n      setRetryAttempts(prev => prev + 1);\n    } finally {\n      setLoading(false);\n      setIsRefreshing(false);\n    }\n  };\n\n  const handleRetry = async () => {\n    await fetchCameras(false);\n  };\n\n  const handleManualRefresh = async () => {\n    await fetchCameras(true);\n  };\n\n  // Mobile interaction handlers\n  const handleImageTap = useCallback((camera) => {\n    const index = filteredCameras.findIndex(c => c.id === camera.id);\n    setSelectedCamera(camera);\n    setCurrentIndex(index >= 0 ? index : 0);\n  }, [filteredCameras]);\n\n  const handleCardPress = useCallback((camera) => {\n    // For long press, also open the modal (same as tap for unified experience)\n    handleImageTap(camera);\n  }, [handleImageTap]);\n\n  const handleCloseModal = useCallback(() => {\n    setSelectedCamera(null);\n    setCurrentIndex(0);\n  }, []);\n\n  // Swipe gesture for view mode switching on mobile\n  const handleSwipeGesture = useCallback((direction) => {\n    if (!touchDevice) {return;}\n\n    const modes = ['featured', 'area', 'all'];\n    const currentIndex = modes.indexOf(viewMode);\n\n    if (direction === 'left' && currentIndex < modes.length - 1) {\n      setViewMode(modes[currentIndex + 1]);\n    } else if (direction === 'right' && currentIndex > 0) {\n      setViewMode(modes[currentIndex - 1]);\n    }\n  }, [viewMode, touchDevice]);\n\n  const groupedCameras = groupCamerasByArea(cameras);\n  const areas = Object.keys(groupedCameras).sort();\n\n  // Show skeleton loading state for initial load\n  if (loading && cameras.length === 0) {\n    return (\n      <LoadingSkeleton\n        count={8}\n        showControls={true}\n        showSummary={true}\n        variant=\"default\"\n      />\n    );\n  }\n\n  // Show enhanced error state\n  if (error && cameras.length === 0) {\n    return (\n      <ErrorState\n        error={error}\n        onRetry={handleRetry}\n        retryAttempts={retryAttempts}\n        maxRetries={3}\n        showDetails={false}\n        variant=\"default\"\n      />\n    );\n  }\n\n  return (\n    <div className=\"space-y-4 sm:space-y-6\">\n      {/* Controls - Enhanced for mobile */}\n      <div className=\"card\">\n        {/* Mobile hint for touch interactions */}\n        {touchDevice && (\n          <div className=\"mb-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n            <div className=\"text-sm text-blue-800\">\n              💡 <strong>터치 가이드:</strong> 카메라를 탭하여 확대 보기 (화살표 키로 탐색, ESC로 닫기)\n            </div>\n          </div>\n        )}\n\n        <div className=\"flex flex-col gap-4\">\n          {/* View Mode Buttons - Mobile optimized */}\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n            <div className=\"grid grid-cols-3 gap-2 sm:flex sm:gap-2\">\n              <button\n                onClick={() => setViewMode('featured')}\n                className={`\n                  px-4 py-3 sm:px-3 sm:py-2 rounded-lg text-sm sm:text-sm \n                  font-medium transition-all duration-200 touch-manipulation\n                  min-h-[44px] sm:min-h-[auto] flex items-center justify-center\n                  ${viewMode === 'featured'\n      ? 'bg-blue-600 text-white shadow-md transform scale-105'\n      : 'bg-gray-200 text-gray-700 hover:bg-gray-300 active:scale-95'\n    }\n                `}\n                aria-pressed={viewMode === 'featured'}\n              >\n                <span className=\"flex items-center gap-1\">\n                  <span>⭐</span>\n                  <span className=\"hidden xs:inline\">주요 지점</span>\n                  <span className=\"xs:hidden\">주요</span>\n                </span>\n              </button>\n              <button\n                onClick={() => setViewMode('area')}\n                className={`\n                  px-4 py-3 sm:px-3 sm:py-2 rounded-lg text-sm sm:text-sm \n                  font-medium transition-all duration-200 touch-manipulation\n                  min-h-[44px] sm:min-h-[auto] flex items-center justify-center\n                  ${viewMode === 'area'\n      ? 'bg-blue-600 text-white shadow-md transform scale-105'\n      : 'bg-gray-200 text-gray-700 hover:bg-gray-300 active:scale-95'\n    }\n                `}\n                aria-pressed={viewMode === 'area'}\n              >\n                <span className=\"flex items-center gap-1\">\n                  <span>📍</span>\n                  <span className=\"hidden xs:inline\">지역별</span>\n                  <span className=\"xs:hidden\">지역</span>\n                </span>\n              </button>\n              <button\n                onClick={() => setViewMode('all')}\n                className={`\n                  px-4 py-3 sm:px-3 sm:py-2 rounded-lg text-sm sm:text-sm \n                  font-medium transition-all duration-200 touch-manipulation\n                  min-h-[44px] sm:min-h-[auto] flex items-center justify-center\n                  ${viewMode === 'all'\n      ? 'bg-blue-600 text-white shadow-md transform scale-105'\n      : 'bg-gray-200 text-gray-700 hover:bg-gray-300 active:scale-95'\n    }\n                `}\n                aria-pressed={viewMode === 'all'}\n              >\n                <span className=\"flex items-center gap-1\">\n                  <span>🗺️</span>\n                  <span className=\"hidden xs:inline\">전체</span>\n                  <span className=\"xs:hidden\">전체</span>\n                </span>\n              </button>\n            </div>\n\n            {/* Swipe hint for mobile */}\n            {touchDevice && (\n              <div className=\"text-xs text-gray-500 text-center sm:text-right\">\n                ← 스와이프하여 모드 변경 →\n              </div>\n            )}\n          </div>\n\n          {/* Area Selection - Mobile optimized */}\n          {viewMode === 'area' && (\n            <div className=\"w-full\">\n              <select\n                value={selectedArea}\n                onChange={(e) => setSelectedArea(e.target.value)}\n                className=\"\n                  w-full px-4 py-3 border-2 border-gray-200 rounded-lg text-sm\n                  bg-white touch-manipulation min-h-[44px] focus:border-blue-500\n                  focus:ring-2 focus:ring-blue-200 transition-all duration-200\n                \"\n                aria-label=\"지역 선택\"\n              >\n                <option value=\"all\">모든 지역</option>\n                {areas.map(area => (\n                  <option key={area} value={area}>\n                    {area} ({groupedCameras[area].length}개)\n                  </option>\n                ))}\n              </select>\n            </div>\n          )}\n\n          {/* Controls Row - Mobile optimized */}\n          <div className=\"flex flex-col sm:flex-row items-stretch sm:items-center gap-3 sm:gap-4\">\n            <label className=\"flex items-center gap-3 text-sm touch-manipulation min-h-[44px] cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={autoRefresh}\n                onChange={(e) => setAutoRefresh(e.target.checked)}\n                className=\"w-5 h-5 rounded border-2 border-gray-300 text-blue-600 focus:ring-2 focus:ring-blue-200\"\n              />\n              <span className=\"select-none\">자동 새로고침</span>\n            </label>\n\n            <button\n              onClick={handleManualRefresh}\n              disabled={loading || isRefreshing}\n              className=\"\n                btn-secondary text-sm font-medium px-4 py-3 sm:py-2\n                rounded-lg transition-all duration-200 touch-manipulation\n                min-h-[44px] sm:min-h-[auto] disabled:opacity-50\n                disabled:cursor-not-allowed active:scale-95\n                flex items-center justify-center gap-2\n              \"\n              aria-label=\"수동 새로고침\"\n            >\n              {isRefreshing ? (\n                <>\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                  <span>업데이트 중...</span>\n                </>\n              ) : (\n                <>\n                  <span>🔄</span>\n                  <span>새로고침</span>\n                </>\n              )}\n            </button>\n          </div>\n\n          {/* Last Update Info */}\n          {lastUpdate && (\n            <div className=\"text-xs text-gray-500 pt-2 border-t border-gray-100\">\n              <div className=\"flex items-center justify-between\">\n                <span>마지막 업데이트: {lastUpdate.toLocaleString('ko-KR')}</span>\n                <span className=\"text-green-600 flex items-center gap-1\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n                  실시간\n                </span>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Loading state for refresh */}\n      {isRefreshing && cameras.length > 0 && (\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3 mb-4\">\n          <div className=\"flex items-center gap-2 text-blue-800\">\n            <div className=\"w-4 h-4 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n            <span className=\"text-sm font-medium\">카메라 데이터를 새로고침하는 중...</span>\n          </div>\n        </div>\n      )}\n\n      {/* Error state for refresh errors (non-blocking) */}\n      {error && cameras.length > 0 && (\n        <ErrorState\n          error={error}\n          onRetry={handleRetry}\n          retryAttempts={retryAttempts}\n          maxRetries={3}\n          showDetails={false}\n          variant=\"inline\"\n        />\n      )}\n\n      {/* Camera Grid - Enhanced mobile responsiveness */}\n      <div className=\"grid grid-cols-1 xs:grid-cols-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-3 sm:gap-4\">\n        {filteredCameras.map((camera, index) => (\n          <CameraCard\n            key={camera.id}\n            camera={camera}\n            index={index}\n            onImageTap={handleImageTap}\n            onCardPress={handleCardPress}\n          />\n        ))}\n      </div>\n\n      {/* Summary - Mobile optimized */}\n      <div className=\"card\">\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2 text-sm\">\n          <span className=\"text-gray-700\">\n            총 <strong>{cameras.length}</strong>개 카메라 중 <strong>{filteredCameras.length}</strong>개 표시\n          </span>\n          <span className=\"text-green-600 flex items-center gap-2\">\n            <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\"></div>\n            <span className=\"hidden sm:inline\">실시간 (data.gov.sg API)</span>\n            <span className=\"sm:hidden\">실시간</span>\n          </span>\n        </div>\n      </div>\n\n      {/* Shared WebcamModal */}\n      {selectedCamera && (\n        <WebcamModal\n          item={selectedCamera}\n          items={filteredCameras}\n          currentIndex={currentIndex}\n          type=\"traffic\"\n          onClose={handleCloseModal}\n          onNavigate={(newIndex) => {\n            setCurrentIndex(newIndex);\n            setSelectedCamera(filteredCameras[newIndex]);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default TrafficCameraGallery;"],"names":["TRAFFIC_API_URL","CAMERA_LOCATIONS","fetchTrafficCameras","options","data","apiService","latestItem","timestamp","cameras","processedCameras","camera","locationInfo","cameraData","_a","_b","_c","getImageQuality","validation","securityValidator","error","enhancedError","metadata","width","height","filterCamerasByArea","area","groupCamerasByArea","grouped","getFeaturedCameras","featuredIds","CameraCardSkeleton","React","delay","jsxs","jsx","ControlsSkeleton","SummarySkeleton","LoadingSkeleton","count","showControls","showSummary","variant","getGridCols","getStaggerDelay","index","baseDelay","itemDelay","_","ErrorState","onRetry","retryAttempts","maxRetries","showDetails","isRetrying","setIsRetrying","useState","showErrorDetails","setShowErrorDetails","errorInfo","errorMessage","canRetry","getRetryDelay","attempt","handleRetry","seconds","resolve","retryError","getContainerClasses","base","getIconSize","PropTypes","CameraCard","onImageTap","onCardPress","imageLoading","setImageLoading","imageError","setImageError","isPressed","setIsPressed","touchStartRef","useRef","pressTimeoutRef","handleImageLoad","e","handleImageError","handleTouchStart","useCallback","handleTouchEnd","touchEnd","deltaX","deltaY","deltaTime","distance","handleTouchCancel","handleContextMenu","TrafficCameraGallery","setCameras","filteredCameras","setFilteredCameras","loading","setLoading","setError","selectedArea","setSelectedArea","viewMode","setViewMode","lastUpdate","setLastUpdate","autoRefresh","setAutoRefresh","setRetryAttempts","isRefreshing","setIsRefreshing","selectedCamera","setSelectedCamera","currentIndex","setCurrentIndex","touchDevice","setTouchDevice","useEffect","checkTouchDevice","fetchCameras","interval","isManualRefresh","err","prev","handleManualRefresh","handleImageTap","c","handleCardPress","handleCloseModal","direction","modes","groupedCameras","areas","Fragment","WebcamModal","newIndex"],"mappings":"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"}